swagger: "2.0"
info:
  version: "0.0.1"
  title: Hello World App
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /restaurant:
    # our controller name
    x-swagger-router-controller: restaurant
    get:
      operationId: getAll
      description: get the restaurants list
      # define the type of response for Success "200" and Error
      parameters:
        - in: query
          name: max
          description: query by rating, max
          type: number
          format: float
          default: 5
          minimum: 1
          maximum: 5
        - in: query
          name: min
          description: query by rating, min
          type: number
          format: float
          default: 1
          minimum: 1
          maximum: 5
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetRestaurantsListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: create a restaurant
      parameters:
        - name: comercialName
          description: Restaurant properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/Restaurants"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /restautant/{id}:
    # our controller name
    x-swagger-router-controller: restaurant
    get:
      description: get a restaurant
      operationId: getById
      # define the type of response for Success "200" and Error
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetRestaurantResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: update a restaurant
      operationId: updateRestaurant
      # define the parameters
      parameters:
        - name: id
          description: Restaurant id
          type: string
          in: path
          required: true
        - name: title
          description: Restaurant properties
          in: body
          schema:
            $ref: "#/definitions/Restaurants"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      description: delete a restaurant
      operationId: removeRestaurant
      # define the parameters
      parameters:
        - name: id
          description: restaurant id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /order:
    # our controller name
    x-swagger-router-controller: order
    post:
      operationId: createOrder
      description: create an order
      parameters:
        - name: totalCost
          description: order properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/Orders"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      operationId: getOrder
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/QueueResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /review/{id}:
    x-swagger-router-controller: review
    post:
      operationId: createReview
      description: create an review for a restaurant
      parameters:
        - name: id
          description: Restaurant id
          type: string
          in: path
          required: true
        - name: name
          description: Name of review
          in: body
          required: true
          schema:
            $ref: "#/definitions/Reviews"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /review:
    x-swagger-router-controller: review
    get:
      operationId: getReviews
      description: get the restaurants list
      # define the type of response for Success "200" and Error
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetRestaurantsListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /notifications:
    x-swagger-router-controller: notification
    get:
      operationId: getNotification
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/QueueResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  Reviews:
    required:
      - name
      - review
      - rating
    properties:
      name:
        type: string
      review:
        type: string
      rating:
        type: number
  GetNotificationsListResponse:
    required:
      - name
      - review
      - rating
    properties:
      name:
        type: string
      review:
        type: string
      rating:
        type: number
  Orders:
    required:
      - totalCost
      - address
    properties:
      meals:
        type: array
        items: 
          type: number
      totalCost:
        type: number
        format: float
      address:
        type: string
      latLng:
        type: object
  Restaurants:
    properties:
      id:
        type: number
      logo:
        type: string
      comercialName:
        type: string
      legalName:
        type: string
      rating:
        type: number
        minimum: 1
        maximum: 5
      reviews:
        type: array
        items: 
          type: object
          properties:
            name:
              type: string
            review:
              type: string
            rating:
              type: number
      meals:
        type: array
        items: 
          type: object
          properties:
            name:
              type: string
            description:
              type: string
            price:
              type: number
      commercialEmail:
        type: string
      adminNumber:
        type: string
      adress:
        type: string
      Location:
        type: object
  GetRestaurantsListResponse:
    required:
      - restaurants
    properties:
      # The array of movies
      restaurants:
        type: array
        items: 
          type: object
          properties:
            id:
              type: string
            logo:
              type: string
            comercialName:
              type: string
            legalName:
              type: string
            rating:
              type: number
              minimum: 1
              maximum: 5
            reviews:
              type: array
              items: 
                type: object
                properties:
                  name:
                    type: string
                  review:
                    type: string
                  rating:
                    type: number
            meals:
              type: array
              items: 
                type: object
                properties:
                  name:
                    type: string
                  description:
                    type: string
                  price:
                    type: number
            commercialEmail:
              type: string
            adminNumber:
              type: string
            adress:
              type: string
            Location:
              type: string
  GetRestaurantResponse:
    required:
      - comercialName
      - legalName
      - logo
    properties:
      id:
        type: number
      logo:
        type: string
      comercialName:
        type: string
      legalName:
        type: string
      rating:
        type: number
        minimum: 1
        maximum: 5
      reviews:
        type: array
        items: 
          type: object
          properties:
            name:
              type: string
            review:
              type: string
            rating:
              type: number
      meals:
        type: array
        items: 
          type: object
          properties:
            name:
              type: string
            description:
              type: string
            price:
              type: number
      commercialEmail:
        type: string
      adminNumber:
        type: string
      adress:
        type: string
      Location:
        type: object
  QueueResponse:
    type: object
  GeneralResponse:
    type: object
    properties:
      success:
        type: number
        description: returns 1 if successful
      description:
        type: string
        description: a short comment 
    required:
      - success
      - description
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
